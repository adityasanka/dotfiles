set encoding=utf-8
" Allow backspacing over everything in insert mode
set backspace=indent,eol,start
" Specify a directory for plugins
call plug#begin('~/.vim/plugged')

"-----------------------------------------------------------
" Plugins
"-----------------------------------------------------------
Plug 'dracula/vim', { 'as': 'dracula' }		" Dracula color scheme
Plug 'bling/vim-airline'			" Lightweight status bar
Plug 'bronson/vim-trailing-whitespace'		" Highlight unwanted whitespace
Plug 'jiangmiao/auto-pairs'			" Brackets, parens, quotes in pair.
Plug 'plasticboy/vim-markdown'			" Markdown syntax highlighting
Plug 'lifepillar/pgsql.vim'                     " PostgreSQL syntax highlighting

" Initialize plugin system
call plug#end()

"-----------------------------------------------------------
" General settings
"-----------------------------------------------------------
syntax enable			  " enable syntax highlighting
set autoindent                    " take indent for new line from previous line
set smartindent                   " enable smart indentation
set autoread                      " reload file if the file changes on the disk
set autowrite                     " write when switching buffers
set autowriteall                  " write on :quit
set number 			  " set line numbers
set cursorline 			  " highlight current line
set noerrorbells                  " No bells!
set novisualbell                  " I said, no bells!
set title                         " let vim set the terminal title
set updatetime=100                " redraw the status bar often
set autochdir

" Map leader key to `,`
let mapleader = ","

"-----------------------------------------------------------
" Color scheme
"-----------------------------------------------------------
let g:dracula_italic = 0
set t_Co=256
colorscheme dracula

"-----------------------------------------------------------
" Plugin: bling/vim-airline
"-----------------------------------------------------------
" Show status bar by default.
set laststatus=2

" Enable top tabline.
let g:airline#extensions#tabline#enabled = 1

" Disable showing tabs in the tabline. This will ensure that the buffers are
" what is shown in the tabline at all times.
let g:airline#extensions#tabline#show_tabs = 0

" Enable powerline fonts.
let g:airline_powerline_fonts = 0

" Explicitly define some symbols that did not work well for me in Linux.
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_symbols.branch = 'âŽ‡'
let g:airline_symbols.maxlinenr = ' L'

"-----------------------------------------------------------
" Language: gitcommit
"-----------------------------------------------------------
au FileType gitcommit setlocal spell
au FileType gitcommit setlocal textwidth=72
au FileType gitcommit set colorcolumn=50,72
au FileType gitcommit set expandtab
au FileType gitcommit set shiftwidth=2
au FileType gitcommit set softtabstop=2
au FileType gitcommit set tabstop=2
autocmd FileType gitcommit setlocal spell

"----------------------------------------------
" Language: Markdown
"----------------------------------------------
au FileType markdown set expandtab
au FileType markdown set shiftwidth=4
au FileType markdown set softtabstop=4
au FileType markdown set tabstop=4
autocmd BufRead,BufNewFile *.md setlocal spell

"----------------------------------------------
" Language: SQL
"----------------------------------------------
au FileType sql set expandtab
au FileType sql set shiftwidth=2
au FileType sql set softtabstop=2
au FileType sql set tabstop=2

"----------------------------------------------
" Language: YAML
"----------------------------------------------
au FileType yaml set expandtab
au FileType yaml set shiftwidth=2
au FileType yaml set softtabstop=2
au FileType yaml set tabstop=2

"----------------------------------------------
" Language: Go
"----------------------------------------------
au FileType go set expandtab
au FileType go set shiftwidth=4
au FileType go set softtabstop=4
au FileType go set tabstop=4
