# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'
# sensible defaults
set -g @plugin 'tmux-plugins/tmux-sensible'
# better mouse mode
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# yank to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
# seamless navigation between vim and tmux
set -g @plugin 'christoomey/vim-tmux-navigator'

# initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# use terminal colors
set-option -sa terminal-overrides ",xterm*:Tc"

# enable mouse
set -g mouse on

# remap prefix from 'C-b' to 'C-Space'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# open windows in current dir
bind c new-window -c "#{pane_current_path}"

# shift alt keys to switch windows
bind -n M-Left previous-window
bind -n M-Right next-window

# start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# don't rename windows automatically
set-option -g allow-rename off

# reload config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf

###########################################
# Status bar
###########################################

# Toggle status bar 
# bind-key s set-option status
# Set status bar at the top
set -g status-position top
# Center window list 
set -g status-justify centre
# Refresh status bar every 5 seconds 
set -g status-interval 5

# Define color variables for readability
# set -g @color_bg "#040404"
# set -g @color_fg "#F1F3F6"
# set -g @color_cursor "#FFFFFF"
# set -g @color_grey "#7B828D"
# set -g @color_red "#F09895"
# set -g @color_green "#62CA5E"
# set -g @color_yellow "#E7B94D"
# set -g @color_blue "#81B5F9"
# set -g @color_magenta "#C497F9"
# set -g @color_cyan "#66C2CD"
# set -g @color_white "#DADEDF"
# set -g @color_light_grey "#A0A7B2"
# set -g @color_light_red "#F5B5B1"
# set -g @color_light_green "#79DE76"
# set -g @color_light_yellow "#EFCB5D"
# set -g @color_light_blue "#9DBCFB"
# set -g @color_light_magenta "#D5B8FB"
# set -g @color_light_cyan "#7ACFD4"

# Status bar background and foreground
set -g status-bg "#040404"
set -g status-fg "#F1F3F6"

# Left status: session name + separator
set -g status-left-length 50
set -g status-left "#[bg=#040404,fg=#81B5F9,bold] TMUX " 

# Inactive windows
setw -g window-status-format "#[bg=#040404,fg=#A0A7B2,italics] #I: #[bg=#040404,fg=#A0A7B2,noitalics]#W"
# Active window
setw -g window-status-current-format "#[bg=#040404,fg=#81B5F9,italics] #I: #[bg=#040404,fg=#A0A7B2,bold,noitalics]#W"
# Window separator
# set -g window-status-separator " #[fg=#EFCB5D]â”‚"
set -g window-status-separator " " 

# Right status: Date and time
set -g status-right-length 100
set -g status-right "#[bg=#040404,fg=#A0A7B2]  %I:%M %p"

# Inactive pane borders - subtle grayish blue
set -g pane-border-style "fg=#7B828D"

# Active pane border - vibrant green with bold for better visibility
set -g pane-active-border-style "fg=#62CA5E,bold"

# Message and command prompt colors
set -g message-style "bg=#E7B94D,fg=#040404"
set -g message-command-style "bg=#66C2CD,fg=#040404"

# Cursor color for command mode
set -g mode-style "bg=#81B5F9,fg=#040404"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
